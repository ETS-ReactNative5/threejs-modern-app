{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/Controls.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/lib/monkeyPatch.js","webpack:///./src/scene/Suzanne.js","webpack:///./src/lib/MotionBlurPass/MotionBlurShaderChunks.js","webpack:///./src/lib/MotionBlurPass/VelocityShader.js","webpack:///./src/lib/MotionBlurPass/GeometryShader.js","webpack:///./src/lib/MotionBlurPass/CompositeShader.js","webpack:///./src/lib/MotionBlurPass/MotionBlurPass.js","webpack:///./src/lib/MotionBlurPass/utils.js","webpack:///./src/index.js","webpack:///./src/scene/screenshot-record-buttons.js","webpack:///./src/scene/lights.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","controls","mapValues","obj","fn","fromEntries","entries","map","k","v","fromObjectToSlider","State","Slider","min","max","step","scale","mapping","x","Math","pow","inverseMapping","log10","initControls","options","stateObject","controlsState","controlsInstance","hideControls","wrapGUI","expanded","closeControls","styles","style","document","createElement","type","innerHTML","head","appendChild","extractAccessor","fnString","accessorStart","indexOf","trim","wireValue","accessor","toString","$onChanges","cons","wireUniform","includes","lastIndexOf","uniforms","WebGLApp","background","backgroundAlpha","fov","frustumSize","near","far","isRunning","time","dt","performance","now","resize","width","height","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","left","right","top","bottom","updateProjectionMatrix","composer","scene","traverse","draw","saveScreenshot","fileName","dataURI","canvas","toDataURL","saveDataURI","startRecording","format","CCapture","workersPath","motionBlurFrames","start","stopRecording","stop","save","undefined","update","xrframe","orbitControls","isTransformControls","world","cannonDebugger","bodies","forEach","body","render","setAnimationLoop","animate","stats","begin","maxDeltaTime","capture","end","this","THREE","antialias","postprocessing","failIfMajorPerformanceCaveat","preserveDrawingBuffer","sortObjects","gamma","outputEncoding","xr","enabled","domElement","setClearColor","maxPixelRatio","orthographic","position","copy","cameraPosition","lookAt","gl","getContext","addEventListener","isDragging","event","isPrimary","offsetX","offsetY","child","onPointerDown","y","dragX","dragY","onPointerMove","onPointerUp","maxMultisampling","getParameter","MAX_SAMPLES","EffectComposer","multisampling","frameBufferType","addPass","RenderPass","OrbitControls","enableDamping","dampingFactor","enablePan","keys","showWorldWireframes","autoUpdate","showFps","Stats","showPanel","dom","loadGPUTier","getGPUTier","glContext","then","gpuTier","gpu","tier","isMobile","fps","getClearColor","getClearAlpha","Boolean","index","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadTexture","url","texture","encoding","setTextureParams","loadImage","crossorigin","image","needsUpdate","initTexture","Error","opt","flipY","isJPEG","search","repeat","wrapS","wrapT","minFilter","magFilter","generateMipmaps","equirectangular","pmrem","pmremEquirectangular","size","highestPowerOfTwo","naturalHeight","renderTarget","outTexture","fromEquirectangularTexture","dispose","basePath","extension","urls","generateCubeUrls","replace","Promise","resolve","reject","HDRCubeTextureLoader","load","cubeMap","assignCubemapOptions","pmremGenerator","compileCubemapShader","fromCubemap","pmremCubemap","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","prefix","postfix","TypeError","_getQueued","_extractType","find","item","ext","test","itemLoadingStart","Date","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","loadingStart","pMap","logError","percent","concurrency","errors","filter","groupLog","GLTFLoader","err","fetch","response","json","loadEnvMap","arrayBuffer","text","groupCollapsed","groupEnd","monkeyPatch","shader","defines","main","objectNormal","transformed","replaces","patchedShader","str","rep","split","join","stringDefines","suzanneKey","assets","albedoKey","metalnessKey","roughnessKey","normalKey","hdrKey","Suzanne","webgl","suzanneGltf","suzanne","clone","envMap","material","metalnessMap","roughnessMap","normalMap","normalScale","roughness","metalness","onBeforeCompile","frequency","movement","amplitude","vertexShader","isMesh","multiplyScalar","add","coords","set","raycaster","setFromCamera","hits","intersectObject","speed","prev_skinning_pars_vertex","velocity_vertex","ShaderChunk","skinbase_vertex","beginnormal_vertex","skinnormal_vertex","defaultnormal_vertex","skinning_vertex","VelocityShader","prevProjectionMatrix","Matrix4","prevModelViewMatrix","prevBoneTexture","expandGeometry","interpolateGeometry","smearIntensity","skinning_pars_vertex","fragmentShader","GeometryShader","CompositeShader","SAMPLES","JITTER_STRATEGY","BLUENOISE_SIZE","sourceBuffer","velocityBuffer","jitter","blueNoiseTex","_blackColor","Color","_defaultOverrides","MotionBlurPass","samples","blurTransparent","renderCameraBlur","renderTargetScale","jitterStrategy","RANDOM_JITTER","debug","display","DEFAULT","dontUpdateState","_prevPosMap","Map","_currentFrameMod","_frustum","Frustum","_projScreenMatrix","_cameraMatricesNeedInitializing","_prevCamProjection","_prevCamWorldInverse","_velocityBuffer","WebGLRenderTarget","LinearFilter","HalfFloatType","_compositeMaterial","ShaderMaterial","_compositeQuad","ThreePass","FullScreenQuad","_enabled","val","clear","alpha","UnsignedByteType","RGBFormat","readBuffer","writeBuffer","compositeQuad","finalBuffer","renderToScreen","autoClear","compile","_ensurePrevCameraTransform","GEOMETRY","setRenderTarget","_drawAllMeshes","VELOCITY","compositeMaterial","floor","matrixWorldInverse","projectionMatrix","prevPosMap","lastUsedFrame","matrixWorld","geometryMaterial","velocityMaterial","boneMatrices","boneTexture","isSkinned","skeleton","bones","skinning","boneTextureNeedsUpdate","Float32Array","sqrt","DataTexture","RGBAFormat","FloatType","saveState","thisFrameId","traverseVisibleMeshes","callback","visible","isSkinnedMesh","children","mesh","_drawMesh","has","delete","overrides","motionBlur","isTransparent","transparent","isCulled","frustumCulled","intersectsObject","_saveCurrentObjectState","_getPreviousFrameState","projMat","invMat","multiplyMatrices","renderBufferDirect","geometry","projScreenMatrix","setFromProjectionMatrix","Pass","REGULAR_JITTER","location","querySelector","visibility","screenshotButton","hemiLight","color","setHSL","groundColor","dirLight","addNaturalLight","EffectPass","VignetteEffect","padding","margin","borderRadius","fontSize","textContent","recordButton","isRecording","addRecordButton"],"mappings":"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","file":"app.401ab3f5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([246,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import State from 'controls-state'\nimport wrapGUI from 'controls-gui'\n\nlet controls\n\nfunction mapValues(obj, fn) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]))\n}\n\nfunction fromObjectToSlider(object) {\n  return State.Slider(object.value, {\n    min: object.min,\n    max: object.max,\n    step: object.step || 0.01,\n    ...(object.scale === 'exp' && {\n      min: object.min || 0.01,\n      mapping: (x) => Math.pow(10, x),\n      inverseMapping: Math.log10,\n    }),\n  })\n}\n\nexport function initControls(object, options = {}) {\n  const stateObject = mapValues(object, (value) => {\n    if (\n      typeof value === 'object' &&\n      (value.hasOwnProperty('value') ||\n        value.hasOwnProperty('max') ||\n        value.hasOwnProperty('min') ||\n        value.hasOwnProperty('step'))\n    ) {\n      return fromObjectToSlider(value)\n    }\n\n    if (typeof value === 'object') {\n      return mapValues(value, (v) => {\n        if (\n          typeof v === 'object' &&\n          (v.hasOwnProperty('value') ||\n            v.hasOwnProperty('max') ||\n            v.hasOwnProperty('min') ||\n            v.hasOwnProperty('step'))\n        ) {\n          return fromObjectToSlider(v)\n        }\n\n        return value\n      })\n    }\n\n    return value\n  })\n\n  const controlsState = State(stateObject)\n  const controlsInstance = options.hideControls\n    ? controlsState\n    : wrapGUI(controlsState, { expanded: !options.closeControls })\n\n  // add the custom controls-gui styles\n  if (!options.hideControls) {\n    const styles = `\n      [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\n        content: initial !important;\n      }\n      [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\n        text-indent: 6px !important;\n      }\n      [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\n        content: initial !important;\n      }\n    `\n    const style = document.createElement('style')\n    style.type = 'text/css'\n    style.innerHTML = styles\n    document.head.appendChild(style)\n  }\n\n  controls = controlsInstance\n  return controlsInstance\n}\n\nfunction extractAccessor(fnString) {\n  if (fnString.slice(-1) === '}') {\n    fnString = fnString.slice(0, -1)\n  }\n\n  const accessorStart = fnString.indexOf('.controls.') + '.controls.'.length\n  fnString = fnString.slice(accessorStart)\n\n  return fnString.trim()\n}\n\nexport function wireValue(object, fn) {\n  const fnString = fn.toString()\n  const accessor = extractAccessor(fnString)\n\n  controls.$onChanges((cons) => {\n    if (cons[accessor]) {\n      object[accessor] = cons[accessor].value\n    }\n  })\n\n  return fn()\n}\n\nexport function wireUniform(object, fn) {\n  const fnString = fn.toString()\n  const accessor = extractAccessor(fnString)\n\n  const key = accessor.includes('.') ? accessor.slice(accessor.lastIndexOf('.') + 1) : accessor\n\n  controls.$onChanges((cons) => {\n    if (cons[accessor]) {\n      object.uniforms[key].value = cons[accessor].value\n    }\n  })\n\n  return { value: fn() }\n}\n","import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer, RenderPass } from 'postprocessing'\nimport cannonDebugger from 'cannon-es-debugger'\nimport CCapture from 'ccapture.js'\nimport { initControls } from './Controls'\n\nexport default class WebGLApp {\n  #width\n  #height\n  #capturer\n  isRunning = false\n  time = 0\n  dt = 0\n  #lastTime = performance.now()\n  #updateListeners = []\n  #pointerdownListeners = []\n  #pointermoveListeners = []\n  #pointerupListeners = []\n  #startX\n  #startY\n\n  get background() {\n    return this.render.getClearColor(new THREE.Color())\n  }\n\n  get backgroundAlpha() {\n    return this.render.getClearAlpha()\n  }\n\n  get isRecording() {\n    return Boolean(this.#capturer)\n  }\n\n  constructor({\n    background = '#111',\n    backgroundAlpha = 1,\n    fov = 45,\n    frustumSize = 3,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: !options.postprocessing,\n      failIfMajorPerformanceCaveat: true,\n      // enabled for recording gifs or videos,\n      // might disable it for performance reasons\n      preserveDrawingBuffer: true,\n      ...options,\n    })\n    if (options.sortObjects !== undefined) {\n      this.renderer.sortObjects = options.sortObjects\n    }\n    if (options.gamma) {\n      this.renderer.outputEncoding = THREE.sRGBEncoding\n    }\n    if (options.xr) {\n      this.renderer.xr.enabled = true\n    }\n\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    // save the fixed dimensions\n    this.#width = options.width\n    this.#height = options.height\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 2\n    // clamp delta to avoid stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup the camera\n    const aspect = this.#width / this.#height\n    if (!options.orthographic) {\n      this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far)\n    } else {\n      this.camera = new THREE.OrthographicCamera(\n        -(frustumSize * aspect) / 2,\n        (frustumSize * aspect) / 2,\n        frustumSize / 2,\n        -frustumSize / 2,\n        near,\n        far\n      )\n      this.camera.frustumSize = frustumSize\n    }\n    this.camera.position.copy(options.cameraPosition || new THREE.Vector3(0, 0, 4))\n    this.camera.lookAt(0, 0, 0)\n\n    this.scene = new THREE.Scene()\n\n    this.gl = this.renderer.getContext()\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic pointer events handler, the second argument\n    // contains the x and y relative to the top left corner\n    // of the canvas.\n    // In case of touches with multiple fingers, only the\n    // first touch is registered.\n    this.isDragging = false\n    this.canvas.addEventListener('pointerdown', (event) => {\n      if (!event.isPrimary) return\n      this.isDragging = true\n      this.#startX = event.offsetX\n      this.#startY = event.offsetY\n      // call onPointerDown method\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerDown === 'function') {\n          child.onPointerDown(event, { x: event.offsetX, y: event.offsetY })\n        }\n      })\n      // call the pointerdown listeners\n      this.#pointerdownListeners.forEach((fn) => fn(event, { x: event.offsetX, y: event.offsetY }))\n    })\n    this.canvas.addEventListener('pointermove', (event) => {\n      if (!event.isPrimary) return\n      // call onPointerMove method\n      const position = {\n        x: event.offsetX,\n        y: event.offsetY,\n        ...(this.#startX !== undefined && { dragX: event.offsetX - this.#startX }),\n        ...(this.#startY !== undefined && { dragY: event.offsetY - this.#startY }),\n      }\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerMove === 'function') {\n          child.onPointerMove(event, position)\n        }\n      })\n      // call the pointermove listeners\n      this.#pointermoveListeners.forEach((fn) => fn(event, position))\n    })\n    this.canvas.addEventListener('pointerup', (event) => {\n      if (!event.isPrimary) return\n      this.isDragging = false\n      // call onPointerUp method\n      const position = {\n        x: event.offsetX,\n        y: event.offsetY,\n        ...(this.#startX !== undefined && { dragX: event.offsetX - this.#startX }),\n        ...(this.#startY !== undefined && { dragY: event.offsetY - this.#startY }),\n      }\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerUp === 'function') {\n          child.onPointerUp(event, position)\n        }\n      })\n      // call the pointerup listeners\n      this.#pointerupListeners.forEach((fn) => fn(event, position))\n\n      this.#startX = undefined\n      this.#startY = undefined\n    })\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      const maxMultisampling = this.gl.getParameter(this.gl.MAX_SAMPLES)\n      this.composer = new EffectComposer(this.renderer, {\n        multisampling: Math.min(8, maxMultisampling),\n        frameBufferType: options.gamma ? THREE.HalfFloatType : undefined,\n        ...options,\n      })\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up OrbitControls\n    if (options.orbitControls) {\n      this.orbitControls = new OrbitControls(this.camera, this.canvas)\n\n      this.orbitControls.enableDamping = true\n      this.orbitControls.dampingFactor = 0.15\n      this.orbitControls.enablePan = false\n\n      if (options.orbitControls instanceof Object) {\n        Object.keys(options.orbitControls).forEach((key) => {\n          this.orbitControls[key] = options.orbitControls[key]\n        })\n      }\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) {\n      this.world = options.world\n      if (options.showWorldWireframes) {\n        this.cannonDebugger = cannonDebugger(this.scene, this.world.bodies, { autoUpdate: false })\n      }\n    }\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      this.controls = initControls(options.controls, options)\n    }\n\n    // detect the gpu info\n    this.loadGPUTier = getGPUTier({ glContext: this.gl }).then((gpuTier) => {\n      this.gpu = {\n        name: gpuTier.gpu,\n        tier: gpuTier.tier,\n        isMobile: gpuTier.isMobile,\n        fps: gpuTier.fps,\n      }\n    })\n  }\n\n  get width() {\n    return this.#width || window.innerWidth\n  }\n\n  get height() {\n    return this.#height || window.innerHeight\n  }\n\n  get pixelRatio() {\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\n  }\n\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    } else {\n      const aspect = width / height\n      this.camera.left = -(this.camera.frustumSize * aspect) / 2\n      this.camera.right = (this.camera.frustumSize * aspect) / 2\n      this.camera.top = this.camera.frustumSize / 2\n      this.camera.bottom = -this.camera.frustumSize / 2\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer, width and height\n    // are automatically extracted from the renderer\n    if (this.composer) {\n      this.composer.setSize()\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse((obj) => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 1920, height = 1080, fileName = 'Screenshot.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  // start recording of a gif or a video\n  startRecording = ({\n    width = 1920,\n    height = 1080,\n    fileName = 'Recording',\n    format = 'gif',\n    ...options\n  } = {}) => {\n    if (this.#capturer) {\n      return\n    }\n\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    this.#capturer = new CCapture({\n      format,\n      name: fileName,\n      workersPath: '',\n      motionBlurFrames: 2,\n      ...options,\n    })\n    this.#capturer.start()\n  }\n\n  stopRecording = () => {\n    if (!this.#capturer) {\n      return\n    }\n\n    this.#capturer.stop()\n    this.#capturer.save()\n    this.#capturer = undefined\n\n    // reset to default size\n    this.resize()\n    this.draw()\n  }\n\n  update = (dt, time, xrframe) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse((obj) => {\n      if (typeof obj.update === 'function' && !obj.isTransformControls) {\n        obj.update(dt, time, xrframe)\n      }\n    })\n\n    if (this.world) {\n      // update the cannon-es physics engine\n      this.world.step(1 / 60, dt)\n\n      // update the debug wireframe renderer\n      if (this.cannonDebugger) {\n        this.cannonDebugger.update()\n      }\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach((body) => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  onPointerDown(fn) {\n    this.#pointerdownListeners.push(fn)\n  }\n\n  onPointerMove(fn) {\n    this.#pointermoveListeners.push(fn)\n  }\n\n  onPointerUp(fn) {\n    this.#pointerupListeners.push(fn)\n  }\n\n  offUpdate(fn) {\n    const index = this.#updateListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#updateListeners.splice(index, 1)\n  }\n\n  offPointerDown(fn) {\n    const index = this.#pointerdownListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointerdownListeners.splice(index, 1)\n  }\n\n  offPointerMove(fn) {\n    const index = this.#pointermoveListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointermoveListeners.splice(index, 1)\n  }\n\n  offPointerUp(fn) {\n    const index = this.#pointerupListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointerupListeners.splice(index, 1)\n  }\n\n  draw = () => {\n    if (this.composer) {\n      this.composer.render(this.dt)\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.isRunning) return\n    this.renderer.setAnimationLoop(this.animate)\n    this.isRunning = true\n    return this\n  }\n\n  stop = () => {\n    if (!this.isRunning) return\n    this.renderer.setAnimationLoop(null)\n    this.isRunning = false\n    return this\n  }\n\n  animate = (now, xrframe) => {\n    if (!this.isRunning) return\n\n    if (this.stats) this.stats.begin()\n\n    this.dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += this.dt\n    this.#lastTime = now\n    this.update(this.dt, this.time, xrframe)\n    this.draw()\n\n    if (this.#capturer) this.#capturer.capture(this.canvas)\n\n    if (this.stats) this.stats.end()\n  }\n\n  get cursor() {\n    return this.canvas.style.cursor\n  }\n\n  set cursor(cursor) {\n    if (cursor) {\n      this.canvas.style.cursor = cursor\n    } else {\n      this.canvas.style.cursor = null\n    }\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","import * as THREE from 'three'\nimport loadImage from 'image-promise'\n\n// TODO maybe add the textureLoader?\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.initTexture(texture)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","import * as THREE from 'three'\nimport highestPowerOfTwo from 'highest-power-two'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    if (options.pmrem) {\n      return pmremEquirectangular(texture, renderer)\n    } else {\n      const size = highestPowerOfTwo(texture.image.naturalHeight)\n      const renderTarget = new THREE.WebGLCubeRenderTarget(size, {\n        generateMipmaps: true,\n        minFilter: THREE.LinearMipmapLinearFilter,\n        magFilter: THREE.LinearFilter,\n      })\n\n      const outTexture = renderTarget.fromEquirectangularTexture(renderer, texture).texture\n\n      texture.dispose() // dispose original texture\n      texture.image.data = null // remove image reference\n\n      return outTexture\n    }\n  }\n\n  const basePath = url\n  const extension = options.extension || '.jpg'\n  const urls = generateCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (extension === '.hdr') {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        (cubeMap) => resolve(assignCubemapOptions(cubeMap, options)),\n        null,\n        () => reject(new Error(`Could not load env map: ${basePath}`))\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      (cubeMap) => resolve(assignCubemapOptions(cubeMap, options)),\n      null,\n      () => reject(new Error(`Could not load env map: ${basePath}`))\n    )\n  })\n}\n\nfunction assignCubemapOptions(cubeMap, options) {\n  if (options.encoding) {\n    cubeMap.encoding = options.encoding\n  }\n  if (options.format) {\n    cubeMap.format = options.format\n  }\n  if (options.pmrem) {\n    cubeMap = pmremCubemap(cubeMap, options.renderer)\n  }\n  return cubeMap\n}\n\n// prefilter the environment map for irradiance\nfunction pmremEquirectangular(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileEquirectangularShader()\n\n  const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// prefilter the environment map for irradiance\nfunction pmremCubemap(cubeMap, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileCubemapShader()\n  const renderTarget = pmremGenerator.fromCubemap(cubeMap)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  cubeMap.dispose() // dispose original texture\n  cubeMap.image.data = null // remove image reference\n\n  return renderTarget.texture\n}\n\nfunction generateCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","import pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find((item) => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = (url) => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦 Asset ${item.url} was not loaded:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Asset ${item.url} was not loaded:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach((fn) => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter((log) => log.type === 'error')\n\n      if (errors.length === 0) {\n        this.groupLog(`📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱`)\n      } else {\n        this.groupLog(\n          `📦 %c Could not load ${errors.length} asset${errors.length > 1 ? 's' : ''} `,\n          'color:white;background:red;'\n        )\n      }\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, (err) =>\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n          )\n        })\n      case 'json':\n        return fetch(url).then((response) => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach((log) => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","export function monkeyPatch(\n  shader,\n  { defines = '', head = '', main = '', objectNormal, transformed, ...replaces }\n) {\n  let patchedShader = shader\n\n  const replaceAll = (str, find, rep) => str.split(find).join(rep)\n  Object.keys(replaces).forEach((key) => {\n    patchedShader = replaceAll(patchedShader, key, replaces[key])\n  })\n\n  patchedShader = patchedShader.replace(\n    'void main() {',\n    `\n    ${head}\n    void main() {\n      ${main}\n    `\n  )\n\n  if (transformed && patchedShader.includes('#include <begin_vertex>')) {\n    patchedShader = patchedShader.replace(\n      '#include <begin_vertex>',\n      `#include <begin_vertex>\n      ${transformed}\n      `\n    )\n  }\n\n  if (objectNormal && patchedShader.includes('#include <beginnormal_vertex>')) {\n    patchedShader = patchedShader.replace(\n      '#include <beginnormal_vertex>',\n      `#include <beginnormal_vertex>\n      ${objectNormal}\n      `\n    )\n  }\n\n  const stringDefines = Object.keys(defines)\n    .map((d) => `#define ${d} ${defines[d]}`)\n    .join('\\n')\n\n  return `\n    ${stringDefines}\n    ${patchedShader}\n  `\n}\n","import * as THREE from 'three'\nimport glsl from 'glslify'\nimport assets from '../lib/AssetManager'\nimport { monkeyPatch } from '../lib/monkeyPatch'\nimport { wireValue, wireUniform } from '../lib/Controls'\n\n// elaborated three.js component example\n// containing example usage of\n//   - asset manager\n//   - control panel\n//   - touch events\n//   - postprocessing\n//   - screenshot saving\n\n// preload the suzanne model\nconst suzanneKey = assets.queue({\n  url: 'assets/suzanne.gltf',\n  type: 'gltf',\n})\n\n// preload the materials\nconst albedoKey = assets.queue({\n  url: 'assets/spotty-metal/albedo.jpg',\n  type: 'texture',\n  // encoding: THREE.sRGBEncoding,\n})\nconst metalnessKey = assets.queue({\n  url: 'assets/spotty-metal/metalness.jpg',\n  type: 'texture',\n})\nconst roughnessKey = assets.queue({\n  url: 'assets/spotty-metal/roughness.jpg',\n  type: 'texture',\n})\nconst normalKey = assets.queue({\n  url: 'assets/spotty-metal/normal.jpg',\n  type: 'texture',\n})\n\n// preload the environment map\nconst hdrKey = assets.queue({\n  url: 'assets/ouside-afternoon-blurred-hdr.jpg',\n  type: 'env-map',\n  // equirectangular means it's just one image, projected\n  equirectangular: true,\n  // encoding: THREE.sRGBEncoding,\n})\n\nexport default class Suzanne extends THREE.Group {\n  constructor(webgl, options = {}) {\n    super(options)\n    this.webgl = webgl\n    this.options = options\n\n    const suzanneGltf = assets.get(suzanneKey)\n    const suzanne = suzanneGltf.scene.clone()\n\n    // TODO fix assets and gamma\n    const map = assets.get(albedoKey)\n    const envMap = assets.get(hdrKey)\n    map.encoding = THREE.sRGBEncoding\n    envMap.encoding = THREE.sRGBEncoding\n\n    const material = new THREE.MeshStandardMaterial({\n      map,\n      metalnessMap: assets.get(metalnessKey),\n      roughnessMap: assets.get(roughnessKey),\n      normalMap: assets.get(normalKey),\n      normalScale: new THREE.Vector2(2, 2),\n      envMap,\n      roughness: webgl.controls.roughness,\n      metalness: 1,\n    })\n    this.material = material\n\n    wireValue(material, () => webgl.controls.roughness)\n\n    material.onBeforeCompile = (shader) => {\n      // expose the uniforms\n      material.uniforms = shader.uniforms\n\n      shader.uniforms.time = { value: 0 }\n      shader.uniforms.frequency = wireUniform(shader, () => webgl.controls.movement.frequency)\n      shader.uniforms.amplitude = wireUniform(shader, () => webgl.controls.movement.amplitude)\n\n      shader.vertexShader = monkeyPatch(shader.vertexShader, {\n        head: glsl`\n          uniform float time;\n          uniform float frequency;\n          uniform float amplitude;\n\n          // you could import glsl packages like this\n          // #pragma glslify: noise = require(glsl-noise/simplex/3d)\n        `,\n        main: glsl`\n          float theta = sin(position.z * frequency + time) * amplitude;\n          float c = cos(theta);\n          float s = sin(theta);\n          mat3 deformMatrix = mat3(c, 0, s, 0, 1, 0, -s, 0, c);\n        `,\n        // hook that lets you modify the normal\n        objectNormal: glsl`\n          objectNormal *= deformMatrix;\n        `,\n        // hook that lets you modify the position\n        transformed: glsl`\n          transformed *= deformMatrix;\n        `,\n      })\n    }\n\n    // apply the material to the model\n    suzanne.traverse((child) => {\n      if (child.isMesh) {\n        child.material = material\n      }\n    })\n\n    // make it a little bigger\n    suzanne.scale.multiplyScalar(1.2)\n\n    this.add(suzanne)\n\n    // set the background as the hdr\n    this.webgl.scene.background = envMap\n  }\n\n  onPointerDown(event, { x, y }) {\n    // for example, check of we clicked on an\n    // object with raycasting\n    const coords = new THREE.Vector2().set(\n      (x / this.webgl.width) * 2 - 1,\n      (-y / this.webgl.height) * 2 + 1\n    )\n    const raycaster = new THREE.Raycaster()\n    raycaster.setFromCamera(coords, this.webgl.camera)\n    const hits = raycaster.intersectObject(this, true)\n    console.log(hits.length > 0 ? `Hit ${hits[0].object.name}!` : 'No hit')\n    // this, of course, doesn't take into consideration the\n    // mesh deformation in the vertex shader\n  }\n\n  onPointerMove(event, { x, y }) {}\n\n  onPointerUp(event, { x, y }) {}\n\n  update(dt, time) {\n    if (this.material.uniforms) {\n      this.material.uniforms.time.value += dt * this.webgl.controls.movement.speed\n    }\n  }\n}\n","import { ShaderChunk } from 'three'\n\n// Modified ShaderChunk.skinning_pars_vertex to handle\n// a second set of bone information from the previou frame\nexport const prev_skinning_pars_vertex = /* glsl */ `\n  #ifdef USE_SKINNING\n  #ifdef BONE_TEXTURE\n    uniform sampler2D prevBoneTexture;\n    mat4 getPrevBoneMatrix( const in float i ) {\n      float j = i * 4.0;\n      float x = mod( j, float( boneTextureSize ) );\n      float y = floor( j / float( boneTextureSize ) );\n      float dx = 1.0 / float( boneTextureSize );\n      float dy = 1.0 / float( boneTextureSize );\n      y = dy * ( y + 0.5 );\n      vec4 v1 = texture2D( prevBoneTexture, vec2( dx * ( x + 0.5 ), y ) );\n      vec4 v2 = texture2D( prevBoneTexture, vec2( dx * ( x + 1.5 ), y ) );\n      vec4 v3 = texture2D( prevBoneTexture, vec2( dx * ( x + 2.5 ), y ) );\n      vec4 v4 = texture2D( prevBoneTexture, vec2( dx * ( x + 3.5 ), y ) );\n      mat4 bone = mat4( v1, v2, v3, v4 );\n      return bone;\n    }\n  #else\n    uniform mat4 prevBoneMatrices[ MAX_BONES ];\n    mat4 getPrevBoneMatrix( const in float i ) {\n      mat4 bone = prevBoneMatrices[ int(i) ];\n      return bone;\n    }\n  #endif\n  #endif\n`\n\n// Returns the body of the vertex shader for the velocity buffer and\n// outputs the position of the current and last frame positions\nexport const velocity_vertex = /* glsl */ `\n  vec3 transformed;\n\n  // Get the normal\n  ${ShaderChunk.skinbase_vertex}\n  ${ShaderChunk.beginnormal_vertex}\n  ${ShaderChunk.skinnormal_vertex}\n  ${ShaderChunk.defaultnormal_vertex}\n\n  // Get the current vertex position\n  transformed = vec3( position );\n  ${ShaderChunk.skinning_vertex}\n  newPosition = modelViewMatrix * vec4(transformed, 1.0);\n\n  // Get the previous vertex position\n  transformed = vec3( position );\n  ${ShaderChunk.skinbase_vertex\n    .replace(/mat4 /g, '')\n    .replace(/getBoneMatrix/g, 'getPrevBoneMatrix')}\n  ${ShaderChunk.skinning_vertex.replace(/vec4 /g, '')}\n  prevPosition = prevModelViewMatrix * vec4(transformed, 1.0);\n\n  // The delta between frames\n  vec3 delta = newPosition.xyz - prevPosition.xyz;\n  vec3 direction = normalize(delta);\n\n  // Stretch along the velocity axes\n  // TODO: Can we combine the stretch and expand\n  float stretchDot = dot(direction, transformedNormal);\n  vec4 expandDir = vec4(direction, 0.0) * stretchDot * expandGeometry * length(delta);\n  vec4 newPosition2 =  projectionMatrix * (newPosition + expandDir);\n  vec4 prevPosition2 = prevProjectionMatrix * (prevPosition + expandDir);\n\n  newPosition =  projectionMatrix * newPosition;\n  prevPosition = prevProjectionMatrix * prevPosition;\n\n  gl_Position = mix(newPosition2, prevPosition2, interpolateGeometry * (1.0 - step(0.0, stretchDot) ) );\n`\n","import { Matrix4, ShaderChunk } from 'three'\nimport { prev_skinning_pars_vertex, velocity_vertex } from './MotionBlurShaderChunks'\n\nexport const VelocityShader = {\n  uniforms: {\n    prevProjectionMatrix: {\n      value: new Matrix4(),\n    },\n\n    prevModelViewMatrix: {\n      value: new Matrix4(),\n    },\n\n    prevBoneTexture: {\n      value: null,\n    },\n\n    expandGeometry: {\n      value: 0,\n    },\n\n    interpolateGeometry: {\n      value: 1,\n    },\n\n    smearIntensity: {\n      value: 1,\n    },\n  },\n\n  vertexShader: `\n    ${ShaderChunk.skinning_pars_vertex}\n    ${prev_skinning_pars_vertex}\n\n    uniform mat4 prevProjectionMatrix;\n    uniform mat4 prevModelViewMatrix;\n    uniform float expandGeometry;\n    uniform float interpolateGeometry;\n    varying vec4 prevPosition;\n    varying vec4 newPosition;\n\n    void main() {\n\n      ${velocity_vertex}\n\n    }\n  `,\n\n  fragmentShader: `\n    uniform float smearIntensity;\n    varying vec4 prevPosition;\n    varying vec4 newPosition;\n\n    void main() {\n\n      // NOTE: It seems the velociyt is incorrectly calculated here -- see the velocity pass\n      // in shader replacement to see how to compute velocities in screen uv space.\n      vec3 vel;\n      vel = (newPosition.xyz / newPosition.w) - (prevPosition.xyz / prevPosition.w);\n\n      gl_FragColor = vec4(vel * smearIntensity, 1.0);\n    }\n  `,\n}\n","import { Matrix4, ShaderChunk } from 'three'\nimport { prev_skinning_pars_vertex, velocity_vertex } from './MotionBlurShaderChunks.js'\n\nexport const GeometryShader = {\n  uniforms: {\n    prevProjectionMatrix: {\n      value: new Matrix4(),\n    },\n\n    prevModelViewMatrix: {\n      value: new Matrix4(),\n    },\n\n    prevBoneTexture: {\n      value: null,\n    },\n\n    expandGeometry: {\n      value: 0,\n    },\n\n    interpolateGeometry: {\n      value: 1,\n    },\n\n    smearIntensity: {\n      value: 1,\n    },\n  },\n\n  vertexShader: /* glsl */ `\n    ${ShaderChunk.skinning_pars_vertex}\n    ${prev_skinning_pars_vertex}\n\n    uniform mat4 prevProjectionMatrix;\n    uniform mat4 prevModelViewMatrix;\n    uniform float expandGeometry;\n    uniform float interpolateGeometry;\n    varying vec4 prevPosition;\n    varying vec4 newPosition;\n    varying vec3 color;\n\n    void main() {\n\n      ${velocity_vertex}\n\n      color = (modelViewMatrix * vec4(normal.xyz, 0)).xyz;\n      color = normalize(color);\n\n    }\n  `,\n\n  fragmentShader: /* glsl */ `\n    varying vec3 color;\n\n    void main() {\n      gl_FragColor = vec4(color, 1);\n    }\n  `,\n}\n","export const CompositeShader = {\n  defines: {\n    SAMPLES: 30,\n    JITTER_STRATEGY: 1,\n    BLUENOISE_SIZE: '32.0',\n  },\n\n  uniforms: {\n    sourceBuffer: {\n      value: null,\n    },\n\n    velocityBuffer: {\n      value: null,\n    },\n\n    jitter: {\n      value: 1,\n    },\n\n    blueNoiseTex: {\n      value: null,\n    },\n  },\n\n  vertexShader: /* glsl */ `\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n  `,\n\n  fragmentShader: /* glsl */ `\n    varying vec2 vUv;\n    uniform sampler2D sourceBuffer;\n    uniform sampler2D velocityBuffer;\n    uniform float jitter;\n\n    #if JITTER_STRATEGY == 2 // blue noise\n    uniform sampler2D blueNoiseTex;\n    #endif\n\n    #include <common>\n    void main() {\n\n      vec2 vel = texture2D( velocityBuffer, vUv ).xy;\n\n      #if JITTER_STRATEGY == 0 // Regular Jitter\n      float jitterValue = mod( ( gl_FragCoord.x + gl_FragCoord.y ) * 0.25, 1.0 );\n      #elif JITTER_STRATEGY == 1 // Random Jitter\n      float jitterValue = rand( gl_FragCoord.xy * 0.01 );\n      #elif JITTER_STRATEGY == 2 // Blue Noise Jitter\n      float jitterValue = texture2D( blueNoiseTex, gl_FragCoord.xy / BLUENOISE_SIZE ).r;\n      #endif\n\n      vec2 jitterOffset = jitter * vel * vec2( jitterValue ) / float( SAMPLES );\n      vec4 result;\n\n      vec2 startUv = clamp( vUv - vel * 0.5 + jitterOffset, 0.0, 1.0 );\n      vec2 endUv = clamp( vUv + vel * 0.5 + jitterOffset, 0.0, 1.0 );\n      for( int i = 0; i < SAMPLES; i ++ ) {\n\n        vec2 sampleUv = mix( startUv, endUv, float( i ) / float( SAMPLES ) );\n        result += texture2D( sourceBuffer, sampleUv );\n\n      }\n\n      result /= float( SAMPLES );\n\n      gl_FragColor = result;\n\n    }\n  `,\n}\n","/**\n * @author Garrett Johnson / http://gkjohnson.github.io/\n * Source https://github.com/gkjohnson/threejs-sandbox/tree/master/motionBlurPass\n * Approach from http://john-chapman-graphics.blogspot.com/2013/01/per-object-motion-blur.html\n */\nimport {\n  Frustum,\n  Color,\n  WebGLRenderTarget,\n  LinearFilter,\n  RGBFormat,\n  HalfFloatType,\n  Matrix4,\n  DataTexture,\n  RGBAFormat,\n  FloatType,\n  ShaderMaterial,\n  UnsignedByteType,\n} from 'three'\nimport { Pass } from 'postprocessing'\nimport { Pass as ThreePass } from 'three/examples/jsm/postprocessing/Pass'\nimport { VelocityShader } from './VelocityShader'\nimport { GeometryShader } from './GeometryShader'\nimport { CompositeShader } from './CompositeShader'\n// import { BlueNoiseGenerator } from '../BlueNoiseGenerator/BlueNoiseGenerator'\nimport { traverseVisibleMeshes } from './utils'\n\nconst _blackColor = new Color(0, 0, 0)\nconst _defaultOverrides = {}\n\n// // Generate Blue Noise Textures\n// const generator = new BlueNoiseGenerator()\n// generator.size = 32\n\n// const data = new Uint8Array(32 ** 2 * 4)\n// for (let i = 0, l = 1; i < l; i++) {\n//   const result = generator.generate()\n//   const bin = result.data\n//   const maxValue = result.maxValue\n\n//   for (let j = 0, l2 = bin.length; j < l2; j++) {\n//     const value = 255 * (bin[j] / maxValue)\n//     data[j * 3 + i] = value\n//   }\n// }\n\n// // TODO: Why won't RedFormat work here?\n// const blueNoiseTex = new DataTexture(data, generator.size, generator.size, RGBFormat)\n// blueNoiseTex.wrapS = RepeatWrapping\n// blueNoiseTex.wrapT = RepeatWrapping\n// blueNoiseTex.minFilter = LinearFilter\n\nexport class MotionBlurPass extends Pass {\n  get enabled() {\n    return this._enabled\n  }\n\n  set enabled(val) {\n    if (val === false) {\n      this._prevPosMap.clear()\n      this._cameraMatricesNeedInitializing = true\n    }\n\n    this._enabled = val\n  }\n\n  constructor(scene, camera, options = {}) {\n    super()\n\n    // settings\n    this.samples = 'samples' in options ? options.samples : 15\n    this.expandGeometry = 'expandGeometry' in options ? options.expandGeometry : 0\n    this.interpolateGeometry = 'interpolateGeometry' in options ? options.interpolateGeometry : 1\n    this.smearIntensity = 'smearIntensity' in options ? options.smearIntensity : 1\n    this.blurTransparent = 'blurTransparent' in options ? options.blurTransparent : false\n    this.renderCameraBlur = 'renderCameraBlur' in options ? options.renderCameraBlur : true\n    this.renderTargetScale = 'renderTargetScale' in options ? options.renderTargetScale : 1\n    this.jitter = 'jitter' in options ? options.jitter : 1\n    this.jitterStrategy =\n      'jitterStrategy' in options ? options.jitterStrategy : MotionBlurPass.RANDOM_JITTER\n\n    this.debug = {\n      display: MotionBlurPass.DEFAULT,\n      dontUpdateState: false,\n    }\n\n    this.scene = scene\n    this.camera = camera\n\n    // list of positions from previous frames\n    this._prevPosMap = new Map()\n    this._currentFrameMod = 0\n    this._frustum = new Frustum()\n    this._projScreenMatrix = new Matrix4()\n    this._cameraMatricesNeedInitializing = true\n\n    this._prevCamProjection = new Matrix4()\n    this._prevCamWorldInverse = new Matrix4()\n\n    // render targets\n    this._velocityBuffer = new WebGLRenderTarget(\n      256 * this.renderTargetScale,\n      256 * this.renderTargetScale,\n      {\n        minFilter: LinearFilter,\n        magFilter: LinearFilter,\n        type: HalfFloatType,\n      }\n    )\n    this._velocityBuffer.texture.name = 'MotionBlurPass.Velocity'\n    this._velocityBuffer.texture.generateMipmaps = false\n\n    this._compositeMaterial = new ShaderMaterial(CompositeShader)\n    this._compositeQuad = new ThreePass.FullScreenQuad(this._compositeMaterial)\n  }\n\n  initialize(renderer, alpha, frameBufferType) {\n    if (!alpha && frameBufferType === UnsignedByteType) {\n      this._velocityBuffer.texture.format = RGBFormat\n    }\n\n    if (frameBufferType !== undefined) {\n      this._velocityBuffer.texture.type = frameBufferType\n    }\n  }\n\n  // Pass API\n  dispose() {\n    super.dispose()\n    this._compositeQuad.dispose()\n    this._velocityBuffer.dispose()\n    this._prevPosMap.clear()\n  }\n\n  setSize(width, height) {\n    const renderTargetScale = this.renderTargetScale\n    const velocityBuffer = this._velocityBuffer\n    velocityBuffer.setSize(width * renderTargetScale, height * renderTargetScale)\n  }\n\n  render(renderer, readBuffer, writeBuffer) {\n    const debug = this.debug\n    const scene = this.scene\n    const camera = this.camera\n    const compositeQuad = this._compositeQuad\n    const finalBuffer = this.renderToScreen ? null : writeBuffer\n\n    // Set the clear state\n    renderer.autoClear = false\n    renderer.setClearColor(_blackColor, 0)\n\n    // TODO: This is getting called just to set 'currentRenderState' in the renderer\n    // NOTE -- why do we need this?\n    renderer.compile(scene, camera)\n    this._ensurePrevCameraTransform()\n\n    switch (debug.display) {\n      case MotionBlurPass.GEOMETRY: {\n        renderer.setRenderTarget(finalBuffer)\n        renderer.clear()\n        this._drawAllMeshes(renderer, MotionBlurPass.GEOMETRY, !debug.dontUpdateState)\n        break\n      }\n\n      case MotionBlurPass.VELOCITY: {\n        renderer.setRenderTarget(finalBuffer)\n        renderer.clear()\n        this._drawAllMeshes(renderer, MotionBlurPass.VELOCITY, !debug.dontUpdateState)\n        break\n      }\n\n      case MotionBlurPass.DEFAULT: {\n        const velocityBuffer = this._velocityBuffer\n        renderer.setRenderTarget(velocityBuffer)\n        renderer.clear()\n        this._drawAllMeshes(renderer, MotionBlurPass.VELOCITY, !debug.dontUpdateState)\n\n        const compositeMaterial = this._compositeMaterial\n        const uniforms = compositeMaterial.uniforms\n        uniforms.sourceBuffer.value = readBuffer.texture\n        uniforms.velocityBuffer.value = this._velocityBuffer.texture\n        uniforms.jitter.value = this.jitter\n        // uniforms.blueNoiseTex.value = blueNoiseTex\n\n        if (compositeMaterial.defines.SAMPLES !== this.samples) {\n          compositeMaterial.defines.SAMPLES = Math.max(0, Math.floor(this.samples))\n          compositeMaterial.needsUpdate = true\n        }\n\n        if (compositeMaterial.defines.JITTER_STRATEGY !== this.jitterStrategy) {\n          compositeMaterial.defines.JITTER_STRATEGY = this.jitterStrategy\n          compositeMaterial.needsUpdate = true\n        }\n\n        renderer.setRenderTarget(finalBuffer)\n        compositeQuad.render(renderer)\n\n        break\n      }\n    }\n\n    // Save the camera state for the next frame\n    this._prevCamWorldInverse.copy(camera.matrixWorldInverse)\n    this._prevCamProjection.copy(camera.projectionMatrix)\n  }\n\n  // Returns the set of previous frames data for object position and bone state. Creates\n  // a new object this with frames state if it hasn't been created yet.\n  _getPreviousFrameState(obj) {\n    const prevPosMap = this._prevPosMap\n    let data = prevPosMap.get(obj)\n    if (data === undefined) {\n      data = {\n        lastUsedFrame: -1,\n        matrixWorld: obj.matrixWorld.clone(),\n        geometryMaterial: new ShaderMaterial(GeometryShader),\n        velocityMaterial: new ShaderMaterial(VelocityShader),\n        boneMatrices: null,\n        boneTexture: null,\n      }\n      prevPosMap.set(obj, data)\n    }\n\n    const isSkinned =\n      obj.type === 'SkinnedMesh' && obj.skeleton && obj.skeleton.bones && obj.skeleton.boneMatrices\n\n    data.geometryMaterial.skinning = isSkinned\n    data.velocityMaterial.skinning = isSkinned\n\n    // copy the skeleton state into the prevBoneTexture uniform\n    const skeleton = obj.skeleton\n    const boneTextureNeedsUpdate =\n      data.boneMatrices === null || data.boneMatrices.length !== skeleton.boneMatrices.length\n    if (isSkinned && boneTextureNeedsUpdate) {\n      const boneMatrices = new Float32Array(skeleton.boneMatrices.length)\n      boneMatrices.set(skeleton.boneMatrices)\n      data.boneMatrices = boneMatrices\n\n      const size = Math.sqrt(skeleton.boneMatrices.length / 4)\n      const boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType)\n      boneTexture.needsUpdate = true\n\n      data.geometryMaterial.uniforms.prevBoneTexture.value = boneTexture\n      data.velocityMaterial.uniforms.prevBoneTexture.value = boneTexture\n      data.boneTexture = boneTexture\n    }\n\n    return data\n  }\n\n  // saves the current state to be used next frame\n  _saveCurrentObjectState(obj) {\n    const prevPosMap = this._prevPosMap\n    const data = prevPosMap.get(obj)\n\n    if (data.boneMatrices !== null) {\n      data.boneMatrices.set(obj.skeleton.boneMatrices)\n      data.boneTexture.needsUpdate = true\n    }\n\n    data.matrixWorld.copy(obj.matrixWorld)\n  }\n\n  // Draw all meshes in the scene and discard those that are no longer being used\n  _drawAllMeshes(renderer, type, saveState) {\n    this._currentFrameMod = (this._currentFrameMod + 1) % 2\n    const thisFrameId = this._currentFrameMod\n    const prevPosMap = this._prevPosMap\n\n    traverseVisibleMeshes(this.scene, (mesh) => {\n      this._drawMesh(renderer, mesh, type, saveState)\n      if (prevPosMap.has(mesh)) {\n        prevPosMap.get(mesh).lastUsedFrame = thisFrameId\n      }\n    })\n\n    prevPosMap.forEach((data, mesh) => {\n      if (data.lastUsedFrame !== thisFrameId) {\n        data.geometryMaterial.dispose()\n        data.velocityMaterial.dispose()\n        if (data.boneTexture) {\n          data.boneTexture.dispose()\n        }\n        prevPosMap.delete(mesh)\n      }\n    })\n  }\n\n  _drawMesh(renderer, mesh, type, saveState) {\n    const overrides = mesh.motionBlur || _defaultOverrides\n    let blurTransparent = this.blurTransparent\n    let renderCameraBlur = this.renderCameraBlur\n    let expandGeometry = this.expandGeometry\n    let interpolateGeometry = this.interpolateGeometry\n    let smearIntensity = this.smearIntensity\n\n    blurTransparent =\n      'blurTransparent' in overrides ? overrides.blurTransparent : this.blurTransparent\n    renderCameraBlur =\n      'renderCameraBlur' in overrides ? overrides.renderCameraBlur : this.renderCameraBlur\n    expandGeometry = 'expandGeometry' in overrides ? overrides.expandGeometry : this.expandGeometry\n    interpolateGeometry =\n      'interpolateGeometry' in overrides ? overrides.interpolateGeometry : this.interpolateGeometry\n    smearIntensity = 'smearIntensity' in overrides ? overrides.smearIntensity : this.smearIntensity\n\n    const isTransparent = mesh.material.transparent || mesh.material.alpha < 1\n    const isCulled = mesh.frustumCulled && !this._frustum.intersectsObject(mesh)\n    const skip = (blurTransparent === false && isTransparent) || isCulled\n\n    if (skip) {\n      if (this._prevPosMap.has(mesh) && saveState) {\n        this._saveCurrentObjectState(mesh)\n      }\n    } else {\n      const camera = this.camera\n      const data = this._getPreviousFrameState(mesh)\n\n      const material =\n        type === MotionBlurPass.GEOMETRY ? data.geometryMaterial : data.velocityMaterial\n      const uniforms = material.uniforms\n      uniforms.expandGeometry.value = expandGeometry\n      uniforms.interpolateGeometry.value = interpolateGeometry\n      uniforms.smearIntensity.value = smearIntensity\n\n      const projMat = renderCameraBlur ? this._prevCamProjection : camera.projectionMatrix\n      const invMat = renderCameraBlur ? this._prevCamWorldInverse : camera.matrixWorldInverse\n      uniforms.prevProjectionMatrix.value.copy(projMat)\n      uniforms.prevModelViewMatrix.value.multiplyMatrices(invMat, data.matrixWorld)\n\n      renderer.renderBufferDirect(camera, null, mesh.geometry, material, mesh, null)\n\n      if (saveState) {\n        this._saveCurrentObjectState(mesh)\n      }\n    }\n  }\n\n  _ensurePrevCameraTransform() {\n    const camera = this.camera\n    const projScreenMatrix = this._projScreenMatrix\n\n    // reinitialize the camera matrices to the current transform because if\n    // the pass has been disabled then the matrices will be out of date\n    if (this._cameraMatricesNeedInitializing) {\n      this._prevCamWorldInverse.copy(camera.matrixWorldInverse)\n      this._prevCamProjection.copy(camera.projectionMatrix)\n      this._cameraMatricesNeedInitializing = false\n    }\n\n    projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse)\n    this._frustum.setFromProjectionMatrix(projScreenMatrix)\n  }\n}\n\nMotionBlurPass.DEFAULT = 0\nMotionBlurPass.VELOCITY = 1\nMotionBlurPass.GEOMETRY = 2\n\nMotionBlurPass.REGULAR_JITTER = 0\nMotionBlurPass.RANDOM_JITTER = 1\n// MotionBlurPass.BLUENOISE_JITTER = 2\n","export function traverseVisibleMeshes(obj, callback) {\n  if (obj.visible) {\n    if (obj.isMesh || obj.isSkinnedMesh) {\n      callback(obj)\n    }\n\n    const children = obj.children\n    for (let i = 0, l = children.length; i < l; i++) {\n      traverseVisibleMeshes(children[i], callback)\n    }\n  }\n}\n","import { EffectPass, VignetteEffect } from 'postprocessing'\nimport WebGLApp from './lib/WebGLApp'\nimport assets from './lib/AssetManager'\nimport Suzanne from './scene/Suzanne'\nimport { addNaturalLight } from './scene/lights'\nimport { MotionBlurPass } from './lib/MotionBlurPass/MotionBlurPass'\nimport { addScreenshotButton, addRecordButton } from './scene/screenshot-record-buttons'\n\n// true if the url has the `?debug` parameter, otherwise false\nwindow.DEBUG = window.location.search.includes('debug')\n\n// grab our canvas\nconst canvas = document.querySelector('#app')\n\n// setup the WebGLRenderer\nconst webgl = new WebGLApp({\n  canvas,\n  // enable transparency\n  alpha: true,\n  // set the scene background color\n  background: '#111',\n  backgroundAlpha: 1,\n  // enable gamma correction, read more about it here:\n  // https://www.donmccurdy.com/2020/06/17/color-management-in-threejs/\n  gamma: true,\n  // enable postprocessing\n  postprocessing: true,\n  // clamping the pixel ratio gives us better performance for\n  // heavy postprocessing effects, such as motion blur\n  maxPixelRatio: 1,\n  // show the fps counter from stats.js\n  showFps: window.DEBUG,\n  // enable OrbitControls\n  orbitControls: window.DEBUG,\n  // Add the controls pane inputs\n  controls: {\n    roughness: 0.5,\n    movement: {\n      speed: {\n        value: 1.5,\n        max: 100,\n        scale: 'exp',\n      },\n      frequency: { value: 0.5, max: 5 },\n      amplitude: { value: 0.7, max: 2 },\n    },\n  },\n  hideControls: !window.DEBUG,\n  // enable cannon-es\n  // world: new CANNON.World(),\n})\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl\n}\n\n// hide canvas\nwebgl.canvas.style.visibility = 'hidden'\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(() => {\n  // show canvas\n  webgl.canvas.style.visibility = ''\n\n  // add any \"WebGL components\" here...\n  // append them to the scene so you can\n  // use them from other components easily\n  webgl.scene.suzanne = new Suzanne(webgl)\n  webgl.scene.add(webgl.scene.suzanne)\n\n  // lights and other scene related stuff\n  addNaturalLight(webgl)\n\n  // postprocessing\n  // add a custom pass\n  // const motionBlurPass = new MotionBlurPass(webgl.scene, webgl.camera, {\n  //   expandGeometry: 0.1,\n  //   smearIntensity: 0.8,\n  //   samples: 50,\n  //   jitterStrategy: MotionBlurPass.REGULAR_JITTER,\n  //   jitter: 3,\n  // })\n  // webgl.composer.addPass(motionBlurPass)\n\n  // add an existing effect from postprocessing\n  webgl.composer.addPass(new EffectPass(webgl.camera, new VignetteEffect()))\n\n  // add the save screenshot and save gif buttons\n  if (window.DEBUG) {\n    addScreenshotButton(webgl)\n    addRecordButton(webgl)\n  }\n\n  // start animation loop\n  webgl.start()\n})\n","// demo the save screenshot feature\nexport function addScreenshotButton(webgl) {\n  const screenshotButton = document.createElement('div')\n\n  // normally the styles would be in style.css\n  screenshotButton.style.position = 'fixed'\n  screenshotButton.style.bottom = 0\n  screenshotButton.style.right = 0\n  screenshotButton.style.background = 'tomato'\n  screenshotButton.style.cursor = 'pointer'\n  screenshotButton.style.padding = '8px 16px'\n  screenshotButton.style.margin = '12px'\n  screenshotButton.style.borderRadius = '3px'\n  screenshotButton.style.color = 'white'\n  screenshotButton.style.fontSize = '24px'\n\n  screenshotButton.textContent = '📸 Save screenshot'\n  screenshotButton.addEventListener('click', webgl.saveScreenshot)\n\n  document.body.appendChild(screenshotButton)\n}\n\n// demo the save video feature\nexport function addRecordButton(webgl) {\n  const recordButton = document.createElement('div')\n\n  // normally the styles would be in style.css\n  recordButton.style.position = 'fixed'\n  recordButton.style.bottom = 0\n  recordButton.style.left = 0\n  recordButton.style.background = 'tomato'\n  recordButton.style.cursor = 'pointer'\n  recordButton.style.padding = '8px 16px'\n  recordButton.style.margin = '12px'\n  recordButton.style.borderRadius = '3px'\n  recordButton.style.color = 'white'\n  recordButton.style.fontSize = '24px'\n\n  recordButton.textContent = '🔴 Start recording gif'\n  recordButton.addEventListener('click', () => {\n    if (!webgl.isRecording) {\n      webgl.startRecording()\n      recordButton.textContent = '🟥 Stop recording gif'\n    } else {\n      webgl.stopRecording()\n      recordButton.textContent = '🔴 Start recording gif'\n    }\n  })\n\n  document.body.appendChild(recordButton)\n}\n","import * as THREE from 'three'\n\n// natural hemisphere light from\n// https://threejs.org/examples/#webgl_lights_hemisphere\nexport function addNaturalLight(webgl) {\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\n  hemiLight.color.setHSL(0.6, 1, 0.6)\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n  hemiLight.position.set(0, 50, 0)\n  webgl.scene.add(hemiLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1)\n  dirLight.color.setHSL(0.1, 1, 0.95)\n  dirLight.position.set(3, 5, 1)\n  dirLight.position.multiplyScalar(50)\n  webgl.scene.add(dirLight)\n}\n"],"sourceRoot":""}